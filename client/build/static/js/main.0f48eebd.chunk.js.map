{"version":3,"sources":["components/settings/Goodies.js","services/auth.js","components/auth/LoginPW.js","components/Homepage.js","components/settings/Languages.js","components/auth/Webcam.js","components/auth/LoginFID.js","components/settings/MoodCheck.js","components/content/FactCard.js","components/content/GifCard.js","components/content/JokeCard.js","components/content/NewsCard.js","services/shuffle.js","services/getContent.js","components/NewsFeed.js","components/NavBar.js","components/settings/NewsPreferences.js","components/auth/Signup.js","components/auth/TestFaceId.js","components/auth/SignupFID.js","App.js","serviceWorker.js","index.js","resources/logo_trans_cropped.png"],"names":["Goodies","state","goodies","handleChange","event","name","target","id","selected","includes","setState","filter","el","handleSubmit","preventDefault","axios","put","user","props","then","history","push","catch","err","console","log","onSubmit","this","map","goodie","inline","key","checked","onChange","e","className","type","theme","Component","signup","username","password","post","response","data","signupFID","profileImg","login","loginFID","loginImg","Homepage","src","Logo","to","Languages","languages","style","sm","lg","Webcam","handleNewScreenshot","idImage","handleCapture","screenshot","webcamRef","current","getScreenshot","setUserImage","React","createRef","onClick","audio","ref","screenshotFormat","Signup","message","showWebcam","toggleWebcam","img","value","setUser","localStorage","setItem","mood","htmlFor","placeholder","open","MoodCheck","selectedMoods","score","some","moodScore","forEach","setMood","window","FactCard","fact","text","rel","href","source_url","source","GifCard","gif","url","JokeCard","joke","setup","punchline","NewsCard","article","urlToImage","title","description","shuffle","a","i","length","j","Math","floor","random","getNews","page","get","articles","uniqueArticles","uArt","getContent","promises","jokes","gifs","images","fixed_height","Promise","all","flat","NewsFeed","randomFacts","content","numberOfUpdates","componentDidMount","getItem","newContent","addEventListener","handleScroll","componentWillUnmount","removeEventListener","innerHeight","pageYOffset","document","body","offsetHeight","columns","1","2","3","item","index","element","height","display","flexDirection","md","handleLogout","clear","delete","NavBar","expand","NewsPreferences","newsSources","selectedNewsSources","showCategories","general","technology","entertainment","science","sports","business","gbSources","usSources","deSources","sources","allSources","reduce","b","concat","toggleCollapse","prevState","newsPreferences","newsContainer","category","newsSource","TestFaceId","handleDetect","res","App","exact","path","render","component","TestFaceID","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.0f48eebd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Container, Form, FormCheckbox, Row } from \"shards-react\";\nimport axios from 'axios'\n\nexport default class Goodies extends Component {\n  state = {\n    goodies: [],\n  };\n\n\n  handleChange = (event) => {\n    let name = event.target.id;\n    let selected = this.state.goodies.includes(name);\n    if(!selected) {\n      this.setState((state) => ({ goodies: [...state.goodies, name]}))\n    }\n    if(selected) {\n      this.setState((state) => ({ goodies: [...state.goodies.filter(el => el !== name)]}))\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    axios.put('/user/update', {\n      user: this.props.user,\n      goodies: this.state.goodies\n    })\n    .then(() => {\n      this.setState({goodies: []});\n      this.props.history.push('/moodcheck');\n    })\n    .catch(err => console.log(err))\n  }\n\n  render() {\n    const goodies = [\n      { name: \"Cute Animal Gifs\", id: 1 },\n      { name: \"Meditation\", id: 2 },\n      { name: \"Science Stuff\", id: 3 },\n      { name: \"Poetry\", id: 4 },\n      { name: \"Arts\", id: 5 },\n      { name: \"Memes\", id: 6 },\n      { name: \"Music\", id: 7 },\n      { name: \"Food\", id: 8 },\n    ];\n\n    return (\n      <Container>\n      <Form onSubmit={this.handleSubmit}>\n        <h4>What cheers you up if you are down?</h4>\n        {goodies.map((goodie) => {\n          return (\n            <FormCheckbox inline\n              id={goodie.name}\n              key={goodie.id}\n              checked={this.state.goodies.includes(goodie.name)}\n              onChange={(e) => this.handleChange(e, goodie.name)}\n              className=\"m-2\"\n            >\n              {goodie.name}\n            </FormCheckbox>\n          );\n        })}\n\n        <Row>\n        <Button type='submit' theme=\"secondary\">\n        Next\n        </Button>\n        </Row>\n        </Form>\n      </Container>\n    );\n  }\n}\n","import axios from 'axios';\n\nconst signup = (username, password) => {\n  return axios\n  .post('/auth/signup', {username, password})\n  .then(response => response.data)\n  .catch(err => err.response.data)\n};\n\n\nconst signupFID = (username, profileImg) => {\n  return axios\n  .post('/auth/signupFID', {username, profileImg})\n  .then(response => response.data)\n  .catch(err => err.response.data)\n};\n\n\nconst login = (username, password) => {\n  return axios\n  .post('/auth/login', {username, password})\n  .then(response => response.data)\n  .catch(err => err.response.data)\n};\n\nconst loginFID = (username, loginImg) => {\n  return axios\n  .post('/auth/loginFID', {username, loginImg})\n  .then(response => response.data)\n  .catch(err => err.response.data)\n}\n\nconst logout = () => {\n  localStorage.clear();\n  return axios\n  .delete('/auth/logout')\n  .then(response => response.data)\n  .catch(err => err.response.data)\n};\n\nexport { signup, signupFID, login, loginFID, logout };","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Alert, Button, Container, Form, FormInput, FormGroup } from \"shards-react\";\nimport { login } from '../../services/auth';\n\nexport default class Login extends Component {\n\n  state = {\n    username: '',\n    password: '',\n    message: ''\n  }\n\n  handleChange = (event) => {\n    let name = event.target.id;\n    let value = event.target.value;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { username, password } = this.state;\n\n    login(username, password)\n    .then(data => {\n      if(data.message) {\n        this.setState({\n          user: '',\n          password: '',\n          message: data.message\n        })\n      } else {\n        this.props.setUser(data);\n        this.props.history.push('/moodcheck')\n      }\n    })\n    .catch(err => console.log(err))\n  }\n\n  render() {\n    return (\n      <Container>\n        <h2>Log In</h2>\n        <Form onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <label htmlFor=\"username\">Username</label>\n            <FormInput\n            name=\"username\"\n            id=\"username\" \n            placeholder=\"Username\"\n            value={this.state.username}\n            onChange={this.handleChange}\n             />\n          </FormGroup>\n          <FormGroup>\n            <label htmlFor=\"#password\">Password</label>\n            <FormInput \n            type=\"password\" \n            id=\"password\" \n            placeholder=\"Password\"\n            value={this.state.password}\n            onChange={this.handleChange} />\n          </FormGroup>\n          {this.state.message && (\n            <Alert theme='warning'>{this.state.message}</Alert>\n          )}\n          <Button type='submit'>Log In</Button>\n        </Form>\n        <Button theme=\"primary\">\n        <Link to=\"/signup\">Don't have an account yet? Sign Up!</Link></Button>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button, Container } from \"shards-react\";\nimport Login from \"./auth/LoginPW\";\nimport { Link } from 'react-router-dom';\nimport Logo from '../resources/logo_trans_cropped.png';\n\nexport default class Homepage extends Component {\n  render() {\n    return (\n      <Container className='hp-c d-flex flex-column align-items-center justify-content-start' >\n        <Container className='logo-c m-4 d-flex flex-column justify-content-start align-items-center'>\n        <img src={Logo} className='hp-logo'/>\n        <h5>You don't have to tell us how you feel. We already know.</h5>\n        </Container>\n        {!this.props.user ? \n        <Container className='d-flex flex-row justify-content-center'>\n        <Button className='m-4' theme=\"secondary\"><Link to='/login'>Log In</Link></Button>\n        <Button className='m-4' theme=\"secondary\"><Link to='/signup'>Sign Up</Link></Button>\n        </Container>\n        :\n        <Container className='d-flex flex-row justify-content-center'>\n        <Button theme=\"secondary\"><Link to='/moodboard'>Go to your feed</Link></Button>\n  \n        </Container>\n        }\n        \n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button, Col, Container, Form, FormCheckbox, Row } from \"shards-react\";\nimport axios from 'axios';\n\n\nexport default class Languages extends Component {\n  state = {\n    languages: []\n  };\n\n  handleChange = (event) => {\n    let name = event.target.id;\n    let selected = this.state.languages.includes(name);\n    if(!selected) {\n      this.setState((state) => ({ languages: [...state.languages, name]}))\n    }\n    if(selected) {\n      this.setState((state) => ({ languages: [...state.languages.filter(el => el !== name)]}))\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    axios.put('/user/update', {\n      user: this.props.user,\n      languages: this.state.languages\n    })\n    .then(() => {\n      this.props.history.push('/settings/news');\n      this.setState({languages: []});\n    })\n    .catch(err => console.log(err))\n  }\n\n  render() {\n    return (\n      <Container style={{'height': '100vh'}}>\n      <Form onSubmit={this.handleSubmit}>\n      <Row>\n      <Col sm=\"12\" lg=\"12\">\n        <h4>Select languages in which you prefer your content</h4>\n        <FormCheckbox\n          inline\n          id='EN'\n          checked={this.state.languages.includes('EN')}\n          onChange={this.handleChange}\n        >\n          English\n        </FormCheckbox>\n        <FormCheckbox\n          inline\n          id='DE'\n          checked={this.state.languages.includes('DE')}\n          onChange={this.handleChange}\n        >\n          German\n        </FormCheckbox>\n        </Col>\n        </Row>\n        <Row>\n        <Button type='submit' theme=\"secondary\">Next</Button>\n        </Row>\n        </Form>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport WebCam from 'react-webcam';\nimport { Button, Container } from 'shards-react';\n\n\nexport default class Webcam extends Component {\n  constructor(props) {\n    super(props);\n    this.webcamRef = React.createRef();\n    this.state = {\n      idImage: null\n    }\n  }\n\n  handleNewScreenshot = () => {\n    this.setState({\n      idImage: null\n    })\n  }\n\n  handleCapture = () => {\n    const screenshot = this.webcamRef.current.getScreenshot();\n    this.setState({idImage: screenshot})\n    this.props.setUserImage(screenshot);\n  }\n\n  render() {\n    return (\n      this.state.idImage ? \n          <Container>\n          <img className='img-fluid' src={this.state.idImage}/>\n        <Button\n          theme='secondary'\n          onClick={this.handleNewScreenshot}\n        >Try Again</Button>\n         </Container>\n        :\n        <Container>\n       <WebCam audio={false} ref={this.webcamRef} screenshotFormat='image/png'/>\n        <Button\n          theme='secondary'\n          onClick={this.handleCapture}\n        >Take a picture</Button>\n         </Container>\n        \n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Alert,\n  Button,\n  Collapse,\n  Container,\n  Form,\n  FormInput,\n  FormGroup,\n} from \"shards-react\";\nimport { Link } from \"react-router-dom\";\nimport { login, loginFID } from \"../../services/auth\";\nimport Webcam from \"./Webcam\";\n\nexport default class Signup extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    message: \"\",\n    loginImg: \"\",\n    showWebcam: true,\n  };\n\n  toggleWebcam = () => {\n    this.setState((state) => ({ showWebcam: !state.showWebcam }));\n  };\n\n  setUserImage = (img) => {\n    this.setState({ loginImg: img });\n  };\n\n  handleChange = (event) => {\n    let name = event.target.id;\n    let value = event.target.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { username, password, loginImg } = this.state;\n    if(!this.state.showWebcam) {\n      login(username, password)\n      .then(data => {\n        if(data.message) {\n          this.setState({\n            user: '',\n            password: '',\n            message: data.message\n          })\n        } else {\n          this.props.setUser(data);\n          this.props.history.push('/moodcheck')\n        }\n      })\n      .catch(err => console.log(err))\n    } else {\n      loginFID(username, loginImg)\n      .then((data) => {\n        if (data.message) {\n          this.setState({\n            username: \"\",\n            loginImg: \"\",\n            message: data.message,\n          });\n        } else {\n          console.log({ data });\n          this.props.setUser(data.user);\n          localStorage.setItem('mood', data.mood);\n          this.props.history.push(\"/moodboard\");\n        }\n      })}}\n\n  render() {\n    return (\n      <Container>\n        <h2>Log In</h2>\n        <Form onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <label htmlFor=\"username\">Username</label>\n            <FormInput\n              type=\"text\"\n              id=\"username\"\n              placeholder=\"Username\"\n              value={this.state.username}\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n\n          <Collapse open={!this.state.showWebcam}>\n            <FormGroup>\n              <label htmlFor=\"password\">Password</label>\n              <FormInput\n                type=\"password\"\n                id=\"password\"\n                placeholder=\"Password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n          </Collapse>\n          <Collapse open={this.state.showWebcam}>\n            <Webcam setUserImage={this.setUserImage} />\n          </Collapse>\n          <Button onClick={this.toggleWebcam}>\n            {this.state.showWebcam\n              ? \"Log In with Password\"\n              : \"Log In with Face ID\"}\n          </Button>\n          {this.state.message && (\n            <Alert theme=\"warning\">{this.state.message}</Alert>\n          )}\n\n          <Button type=\"submit\">Log In</Button>\n        </Form>\n        <Button theme=\"primary\">\n          <Link to=\"/login\">Don't have an account yet? Sign Up!</Link>\n        </Button>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button, Container, Form, FormCheckbox, Row } from \"shards-react\";\n\nexport default class MoodCheck extends Component {\n  state = {\n    selectedMoods: []\n  };\n\n\n  handleChange = (event, score) => {\n    let name = event.target.id;\n    let selected = this.state.selectedMoods.some(el => el.name === name);\n    if(!selected) {\n      this.setState((state) => ({ selectedMoods: [...state.selectedMoods, {name, score}]}))\n    }\n    if(selected) {\n      this.setState((state) => ({ selectedMoods: [...state.selectedMoods.filter(el => el.name !== name)]}))\n    }\n  }\n\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let moodScore = 0;\n    this.state.selectedMoods.forEach(mood => moodScore += mood.score);\n    if(moodScore < 0) {\n      this.props.setMood('bad');\n      window.localStorage.setItem('mood', 'bad');\n    } else {\n      this.props.setMood('good');\n      window.localStorage.setItem('mood', 'good');\n    }\n    \n    this.props.history.push('/moodboard');\n  }\n\n  \n\n  render() {\n    const moods = [\n      { name: \"Calm\", id: 1, score: 1 },\n      { name: \"Angry\", id: 2, score: -2 },\n      { name: \"Happy\", id: 3, score: 2 },\n      { name: \"Frustrated\", id: 4, score: -2 },\n      { name: \"Fearful\", id: 5, score: -2 },\n      { name: \"Peaceful\", id: 6, score: 1 },\n      { name: \"Anxious\", id: 7, score: -2 },\n      { name: \"Sad\", id: 8, score: -2 },\n      { name: \"Excited\", id: 9, score: 2 },\n      { name: \"Depressed\", id: 10, score: -2 },\n      { name: \"Optimistic\", id: 11, score: 2 }\n    ];\n\n    return (\n      <Container>\n        <h4>How are you feeling today?</h4>\n        <Form onSubmit={this.handleSubmit}>\n        {moods.map((mood) => {\n          return (\n            <FormCheckbox inline\n              key={mood.id}\n              id={mood.name}\n              checked={this.state.selectedMoods.some((el => el.name === mood.name))}\n              onChange={(e) => this.handleChange(e, mood.score)}\n              className=\"m-2\"\n            >\n              {mood.name}\n            </FormCheckbox>\n          );\n        })}\n        <Row>\n        <Button type=\"submit\" theme=\"secondary\">Next</Button>\n        </Row>\n        </Form>\n\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter\n} from \"shards-react\";\n\nexport default function FactCard(props) {\n  return (\n    <Card className='my-2'>\n      <CardHeader>Random Fact</CardHeader>\n      <CardBody>\n        <p>{props.fact.text}</p>\n      </CardBody>\n      <CardFooter> <a target=\"_blank\" rel=\"noopener noreferrer\" href={props.fact.source_url}>Source: {props.fact.source}</a> </CardFooter>\n    </Card>\n  );\n}","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardImg,\n  CardFooter\n} from \"shards-react\";\n\nexport default function GifCard(props) {\n  \n  return (\n    <Card className='my-2'>\n      <CardHeader>GIPHY</CardHeader>\n      <CardImg src={props.gif.url} />\n      <CardFooter>Source: GIPHY</CardFooter>\n    </Card>\n  );\n}","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle\n} from \"shards-react\";\n\nexport default function JokeCard(props) {\n  return (\n    <Card className='my-2'>\n      <CardHeader>Random Joke</CardHeader>\n      <CardBody>\n      <CardTitle>{props.joke.setup}</CardTitle>\n      <p>{props.joke.punchline}</p>\n      </CardBody>\n    </Card>\n  );\n}","import React, { Component } from \"react\";\nimport './NewsCard.css'\nimport {\n  Card,\n  CardHeader,\n  CardImg,\n  CardTitle,\n  CardBody,\n  CardFooter,\n  Button\n} from \"shards-react\";\n\nexport default class NewsCard extends Component {\n\nrender() {\n  let article = this.props.article;\n  if(!article) {return <></>}\n  return (\n        <Card className='my-2' >\n        <CardHeader>News {article.source.name}</CardHeader>\n        <CardImg src={article.urlToImage} style={{'maxHeight': '200px'}}/>\n        <CardBody>\n          <CardTitle>{article.title}</CardTitle>\n          <p>{article.description}</p>\n          <Button theme='secondary'><a target=\"_blank\" rel=\"noopener noreferrer\" href={article.url}>Read More</a></Button>\n        </CardBody>\n        <CardFooter>Favorite</CardFooter>\n      </Card>\n\n  );\n}\n\n}","function shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nexport {shuffle};","import axios from 'axios';\n\n\nconst getNews = (page) => {\n  return axios.get(`/data/newsapi/${page}`)\n  .then(articles => {\n    articles.data.forEach(article => article.type='news');\n    let uniqueArticles = [];\n    articles.data.map(article => uniqueArticles.some(uArt => uArt.title === article.title) ? '' : uniqueArticles.push(article));\n    return uniqueArticles;\n  })\n  .catch(err => console.log(err))\n}\n\n\nconst getFact = () => {\n return axios.get('/data/randomfact')\n  .then(fact => {\n    console.log(fact);\n    console.log('fact received')\n    fact.data.type = 'fact';\n    return fact.data\n  })\n}\n\nconst getJokes = () => {\n return axios.get('/data/jokes')\n  .then(jokes => {\n    console.log('joke received')\n    jokes.data.forEach(joke => joke.type='joke');\n    return jokes.data\n  })\n}\n\nconst getCuteGifs = () => {\n  return axios.get('/data/cutegifs')\n  .then(gifs => {\n    console.log(gifs)\n    return gifs.data.data.map(gif => ({'url': gif.images.fixed_height.url, 'type': 'gif'}))\n  })\n  .catch(err => console.log(err))\n}\n\nconst getContent = () => {\n //get User and render according to goodie preferences\n  let promises = [getJokes(), getCuteGifs()]\n  return Promise.all(promises)\n  .then(promises => promises.flat())\n}\n\nexport { getContent, getNews }; ","import React, { Component } from \"react\";\nimport FactCard from \"./content/FactCard\";\nimport GifCard from './content/GifCard';\nimport JokeCard from \"./content/JokeCard\";\nimport NewsCard from \"./content/NewsCard\";\nimport { Col, Container, Row } from \"shards-react\";\nimport axios from \"axios\";\nimport { shuffle } from '../services/shuffle';\nimport { getContent, getNews } from \"../services/getContent\";\n\nexport default class NewsFeed extends Component {\n  state = {\n    articles: [],\n    randomFacts: [],\n    jokes: [],\n    content: [],\n    numberOfUpdates: 1,\n  };\n\n  componentDidMount = () => {\n    if (window.localStorage.getItem(\"mood\") === \"good\") {\n      getNews(this.state.numberOfUpdates)\n      .then((uniqueArticles) => {\n        this.setState({\n          content: [...this.state.content, ...uniqueArticles],\n        });\n      });\n    }\n\n    if (window.localStorage.getItem(\"mood\") === \"bad\") {\n      console.log('bad mood');\n      getContent().then((newContent) => {\n        console.log(newContent)\n        shuffle(newContent);\n        this.setState((state) => ({\n          content: [...state.content, ...newContent]\n        }));\n      });\n    }\n\n    window.addEventListener(\"scroll\", this.handleScroll, true);\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  };\n\n  handleScroll = () => {\n    if (window.innerHeight + window.pageYOffset >= document.body.offsetHeight) {\n      console.log(\"You reached the bottom\");\n    }\n  };\n\n  // handleFetching = () => {\n  //   if(window.localStorage.getItem('mood') === 'good') {\n  //     console.log('Fetching Triggered');\n  //     this.getNews(this.state.numberOfUpdates).then(() => {\n  //       this.setState((state) => ({\n  //         numberOfUpdates: state.numberOfUpdates + 1,\n  //        }));\n  //     }\n  //     )\n  //   }\n  // }\n\n\n  render() {\n    let content = this.state.content;\n\n    let columns = {\n      1: [],\n      2: [],\n      3: []\n    }\n\n\n    if (content === 0) return <></>;\n\n    content.forEach((item, index) => {\n      let element;\n      if(item.type === 'news') {\n        element = <NewsCard article={item} />\n      }\n      if(item.type === 'joke') {\n        element = <JokeCard joke={item} />\n      }\n      if(item.type === 'fact') {\n        element = <FactCard fact={item} />\n      }\n      if(item.type === 'gif') {\n        element = <GifCard gif={item} />\n      }\n      columns[(index%3+1)].push(element);\n    })\n\n    return (\n      <Container>\n        <Row>\n          <Col\n            style={{\n              height: \"fit-content\",\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n            sm=\"12\"\n            md=\"6\"\n            lg=\"4\"\n          >\n            {columns['1']}\n          </Col>\n          <Col style={{ height: \"fit-content\" }} sm=\"12\" md=\"6\" lg=\"4\">\n            {columns['2']}\n          </Col>\n          <Col style={{ height: \"fit-content\" }} sm=\"12\" md=\"6\" lg=\"4\">\n            {columns['3']}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Nav, Navbar, NavbarBrand, NavLink, NavItem } from 'shards-react';\nimport { logout } from '../services/auth';\nimport Logo from '../resources/logo_trans_cropped.png'\n\nconst handleLogout = props => {\n  logout()\n  .then(() => {\n    props.setUser(null);\n  })\n}\n\nexport default function NavBar(props) {\n    return (\n      <Navbar className='primary d-flex' expand=\"sm\">\n      <img src={Logo} className='nav-logo'/>\n      \n    \n     \n      {props.user ? \n        <Nav>\n        <NavItem>\n          <NavLink href='/' onClick={() => handleLogout(props)}>Log Out</NavLink>\n        </NavItem>\n        </Nav> :\n        <Nav>\n        <NavItem>\n          <NavLink href='/login'>Log In</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink href='/signup'>Sign Up</NavLink>\n        </NavItem>\n        </Nav>\n        }\n       \n      \n\n      </Navbar>\n    )\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button, Col, Collapse, Container, Form, FormCheckbox, Row } from \"shards-react\";\n\nexport default class NewsPreferences extends Component {\n  state = {\n    newsSources: [],\n    selectedNewsSources: [],\n    showCategories: {\n      general: false,\n      technology: false,\n      entertainment: false,\n      science: false,\n      sports: false,\n      business: false,\n    }\n  };\n\n  componentDidMount = () => {\n    let promises = [];\n    let gbSources = axios.get(\"/data/newssources/en/gb\");\n    let usSources = axios.get(\"/data/newssources/en/us\");\n    let deSources = axios.get(\"/data/newssources/de/de\");\n    if (this.props.user.languages.includes(\"EN\")) {\n      promises.push(usSources, gbSources);\n    }\n    if (this.props.user.languages.includes(\"DE\")) {\n      promises.push(deSources);\n    }\n    Promise.all(promises)\n      .then((sources) => {\n        let allSources = sources\n          .map((source) => source.data)\n          .reduce((a, b) => a.concat(b), []);\n        console.log(allSources);\n        this.setState({\n          newsSources: allSources,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  toggleCollapse = (event) => {\n    event.preventDefault();\n    let name = event.target.id;\n    this.setState(prevState => ({\n      showCategories: {                   // object that we want to update\n          ...prevState.showCategories,    // keep all other key-value pairs\n          [name]: !prevState.showCategories[name]       // update the value of specific key\n      }\n  }))\n }\n    \n\n  handleChange = (event) => {\n    let name = event.target.id;\n    let selected = this.state.selectedNewsSources.includes(name);\n    if (!selected) {\n      this.setState((state) => ({\n        selectedNewsSources: [...state.selectedNewsSources, name],\n      }));\n    }\n    if (selected) {\n      this.setState((state) => ({\n        selectedNewsSources: [\n          ...state.selectedNewsSources.filter((el) => el !== name),\n        ],\n      }));\n    }\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    axios\n      .put(\"/user/update\", {\n        user: this.props.user,\n        newsPreferences: this.state.selectedNewsSources,\n      })\n      .then(() => {\n        this.setState({ selectedNewsSources: [] });\n        this.props.history.push(\"/settings/goodies\");\n      })\n      .catch((err) => console.log(err));\n  };\n  \n\n  render() {\n    let newsCategories = [\n      \"general\",\n      \"technology\",\n      \"entertainment\",\n      \"science\",\n      \"sports\",\n      \"business\",\n    ];\n\n    let newsContainer = newsCategories.map((category) => {\n      return (\n        <Container>\n          <Row>\n            <a href=\"#\"><h6 id={category} onClick={this.toggleCollapse}>{category} ▼</h6></a>\n          </Row>\n          <Collapse open={this.state.showCategories[category]}>\n          <Row>\n            {this.state.newsSources\n              .filter((source) => source.category === category)\n              .map((newsSource) => {\n                return (\n                  <FormCheckbox\n                    id={newsSource.id}\n                    key={newsSource.id}\n                    checked={this.state.selectedNewsSources.includes(\n                      newsSource.id\n                    )}\n                    onChange={this.handleChange}\n                    className=\"m-2\"\n                  >\n                    {newsSource.name}\n                  </FormCheckbox>\n                );\n              })}\n          </Row>\n          </Collapse>\n        </Container>\n      );\n    });\n\n  if(this.state.newsSources.length === 0) return (<></>)\n  return (\n          <Container>\n          <Container className='p3 m5'>\n          <Form onSubmit={this.handleSubmit}>\n          <h4>Which news sources are you interested in?</h4>\n         {newsContainer}\n         <Row>\n        <Button type=\"submit\" theme=\"secondary\">Next</Button>\n         </Row>\n         </Form>\n       </Container>\n       </Container>\n  )\n  \n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Alert,\n  Button,\n  Collapse,\n  Container,\n  Form,\n  FormInput,\n  FormGroup,\n} from \"shards-react\";\nimport { Link } from \"react-router-dom\";\nimport { signup } from \"../../services/auth\";\nimport { signupFID } from '../../services/auth';\nimport Webcam from \"./Webcam\";\n\nexport default class Signup extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    message: \"\",\n    profileImg: \"\",\n    showWebcam: true,\n  };\n\n  toggleWebcam = () => {\n    this.setState((state) => ({ showWebcam: !state.showWebcam }));\n  };\n\n  setUserImage = (img) => {\n    this.setState({ profileImg: img });\n  };\n\n  handleChange = (event) => {\n    let name = event.target.id;\n    let value = event.target.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { username, password, profileImg } = this.state;\n    if(!this.state.showWebcam) {\n      signup(username, password).then((data) => {\n        if (data.message) {\n          this.setState({\n            username: \"\",\n            password: \"\",\n            message: data.message,\n          });\n        } else {\n          console.log({ data });\n          this.props.setUser(data);\n          this.props.history.push(\"/settings/lang\");\n        }\n      })\n    } else {\n      signupFID(username, profileImg)\n      .then((data) => {\n        if (data.message) {\n          this.setState({\n            username: \"\",\n            profileImg: \"\",\n            message: data.message,\n          });\n        } else {\n          console.log({ data });\n          this.props.setUser(data);\n          this.props.history.push(\"/settings/lang\");\n        }\n      })}}\n\n  render() {\n    return (\n      <Container>\n        <h2>Sign Up</h2>\n        <Form onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <label htmlFor=\"username\">Username</label>\n            <FormInput\n              type=\"text\"\n              id=\"username\"\n              placeholder=\"Username\"\n              value={this.state.username}\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n\n          <Collapse open={!this.state.showWebcam}>\n            <FormGroup>\n              <label htmlFor=\"password\">Password</label>\n              <FormInput\n                type=\"password\"\n                id=\"password\"\n                placeholder=\"Password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n          </Collapse>\n          <Collapse open={this.state.showWebcam}>\n            <Webcam setUserImage={this.setUserImage} />\n          </Collapse>\n          <Button onClick={this.toggleWebcam}>\n            {this.state.showWebcam\n              ? \"Sign Up with Password\"\n              : \"Sign Up with Face ID\"}\n          </Button>\n          {this.state.message && (\n            <Alert theme=\"warning\">{this.state.message}</Alert>\n          )}\n\n          <Button type=\"submit\">Sign Up</Button>\n        </Form>\n        <Button theme=\"primary\">\n          <Link to=\"/login\">Already have an account? Log In</Link>\n        </Button>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Webcam from './Webcam';\nimport {Button} from 'shards-react';\nimport axios from 'axios';\n\n\nexport default class TestFaceId extends Component {\n\n  state = {\n    username: 'mira8',\n    profileImg: ''\n  }\n\n  setUserImage = (img) => {\n    this.setState({ profileImg: img });\n  };\n\n  handleDetect = () => {\n    axios.post('/auth/facialSignUp', {\n      username: this.state.username,\n      profileImg: this.state.profileImg\n    })\n    .then(res => {\n      console.log(res)\n    })\n    .catch(err => console.log(err))\n  }\n  \n\n  render() {\n    return (\n      <div>\n        <Webcam setUserImage={this.setUserImage} />\n        <Button onClick={this.handleDetect}>Detect Face</Button>\n      </div>\n    )\n  }\n}\n\n\n","import React, { Component } from \"react\";\nimport {\n  Alert,\n  Button,\n  Container,\n  Form,\n  FormInput,\n  FormGroup,\n} from \"shards-react\";\nimport { Link } from \"react-router-dom\";\nimport { signup } from \"../../services/auth\";\nimport Webcam from './Webcam';\n\n\nexport default class Signup extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    message: \"\",\n    profileImg: \"\",\n    showWebcam: false,\n  };\n\n  toggleWebcam = () => {\n    this.setState((state) => ({ showWebcam: !state.showWebcam }));\n  };\n\n  setUserImage = (img) => {\n    this.setState({ profileImg: img });\n  };\n\n  handleChange = (event) => {\n    let name = event.target.id;\n    let value = event.target.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { username, password } = this.state;\n\n    signup(username, password).then((data) => {\n      if (data.message) {\n        this.setState({\n          username: \"\",\n          password: \"\",\n          message: data.message,\n        });\n      } else {\n        console.log({ data });\n        this.props.setUser(data);\n        this.props.history.push(\"/settings/lang\");\n      }\n    });\n  };\n\n  render() {\n    return (\n      <Container>\n        <h2>Sign Up</h2>\n        <Form onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <label htmlFor=\"username\">Username</label>\n            <FormInput\n              type=\"text\"\n              id=\"username\"\n              placeholder=\"Username\"\n              value={this.state.username}\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <label htmlFor=\"password\">Password</label>\n            <FormInput\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n          {this.state.message && (\n            <Alert theme=\"warning\">{this.state.message}</Alert>\n          )}\n            <Webcam setUserImage={this.setUserImage}/>\n          <Button type=\"submit\">Sign Up</Button>\n        </Form>\n        <Button theme=\"primary\">\n          <Link to=\"/login\">Already have an account? Log In</Link>\n        </Button>\n\n       \n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Goodies from './components/settings/Goodies';\nimport Homepage from './components/Homepage';\nimport Languages from './components/settings/Languages';\nimport Login from './components/auth/LoginFID';\nimport MoodCheck from './components/settings/MoodCheck';\nimport NewsFeed from './components/NewsFeed';\nimport NavBar from './components/NavBar.js';\nimport NewsPreferences from './components/settings/NewsPreferences.js';\nimport Signup from './components/auth/Signup';\nimport SignupFID from './components/auth/SignupFID';\nimport TestFaceID from './components/auth/TestFaceId'\n\n\n\nclass App extends Component {\n\n  state = {\n    user: this.props.user,\n    mood: ''\n  }\n\n  setUser = (data) => {\n      this.setState({\n        user: data\n      })\n  }\n\n  setMood = (mood) => {\n    this.setState({\n      mood: mood\n    })\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <NavBar user={this.state.user} setState={this.setUser}/>\n        <Route \n          exact\n          path=\"/\"\n          render={props => <Homepage user={this.state.user} {...props} />}\n        />\n        <Route \n          exact\n          path=\"/login\"\n          render={props => <Login setUser={this.setUser} setMood={this.setMood} {...props} />}\n        />\n        <Route \n          exact\n          path=\"/signup\"\n          render={props => <Signup setUser={this.setUser} {...props} />}\n        />\n        <Route\n          exact\n          path=\"/settings/lang\"\n          render={props => <Languages user={this.state.user} {...props} />}\n        />\n        <Route\n          exact\n          path=\"/settings/news\"\n          render={props => <NewsPreferences user={this.state.user} {...props} />}\n        />\n        <Route \n          exact\n          path=\"/settings/goodies\"\n          render={props => <Goodies user={this.state.user} {...props} />}\n        />\n        <Route \n          exact\n          path=\"/moodcheck\"\n          render={props => <MoodCheck setMood={this.setMood} {...props} />}\n        />\n        <Route \n          exact\n          path=\"/moodboard\"\n          render={props => <NewsFeed mood={this.state.mood} {...props} />}\n        />\n        <Route \n          exact\n          path=\"/testFID\"\n          component={TestFaceID}\n        />\n      \n      </BrowserRouter>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios'\n\naxios.get('/auth/loggedin')\n.then(response => {\n  const user = response.data;\n  ReactDOM.render(\n    <React.StrictMode>\n      <App user={user}/>\n    </React.StrictMode>,\n    document.getElementById('root')\n)})\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo_trans_cropped.9e4cc1b3.png\";"],"sourceRoot":""}